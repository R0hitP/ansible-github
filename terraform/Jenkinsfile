pipeline {
    options {
        timestamps()
        skipDefaultCheckout()
    }
    agent { label 'ansible' }
    parameters {
        choice(name: 'Action', choices: 'plan\napply', description: 'Manual build stages')
    }
    // triggers {
    //     pollSCM('H/10 * * * *')
    // }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Terraform Init') {
            steps {
                ansiColor('xterm') {
                    sh 'cd terraform; terraform init'
                }
            }
        }
        stage('Terraform Plan') {
            steps {
                ansiColor('xterm') {
                    sh 'cd terraform; terraform plan'
                }
            }
        }
        stage('Terraform Apply') {
            when {
                expression {
                    params.Action == 'apply'
                }
            }
            steps {
                ansiColor('xterm') {
                    sh 'cd terraform; terraform apply -auto-approve'
                }
            }
        }
        stage('Run ansible playbook') {
            when {
                expression {
                    params.Action == 'apply'
                }
            }
            steps {
                dir('terraform') { // Change directory to 'terraform'
                    ansiColor('xterm') {
                        ansiblePlaybook(
                            playbook: 'test.yml',
                            inventory: 'inventory.yml',
                            //credentialsId: 'sample-ssh-key',
                            colorized: true)
                    }
                }
            }
        }
    }
    post {
        always {
            echo "Clean up the workspace in deploy node!"
            cleanWs()
        }
    }
}
